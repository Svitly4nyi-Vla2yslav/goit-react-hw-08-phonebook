"use strict";(self.webpackChunkreact_homework_template=self.webpackChunkreact_homework_template||[]).push([[751],{751:function(e,n,t){t.r(n),t.d(n,{default:function(){return k}});var r=t(439),a=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:21;return crypto.getRandomValues(new Uint8Array(e)).reduce((function(e,n){return e+=(n&=63)<36?n.toString(36):n<62?(n-26).toString(36).toUpperCase():n>62?"-":"_"}),"")},u=t(791),o=t(434),i="NOT_FOUND";var c=function(e,n){return e===n};function s(e,n){var t="object"===typeof n?n:{equalityCheck:n},r=t.equalityCheck,a=void 0===r?c:r,u=t.maxSize,o=void 0===u?1:u,s=t.resultEqualityCheck,l=function(e){return function(n,t){if(null===n||null===t||n.length!==t.length)return!1;for(var r=n.length,a=0;a<r;a++)if(!e(n[a],t[a]))return!1;return!0}}(a),f=1===o?function(e){var n;return{get:function(t){return n&&e(n.key,t)?n.value:i},put:function(e,t){n={key:e,value:t}},getEntries:function(){return n?[n]:[]},clear:function(){n=void 0}}}(l):function(e,n){var t=[];function r(e){var r=t.findIndex((function(t){return n(e,t.key)}));if(r>-1){var a=t[r];return r>0&&(t.splice(r,1),t.unshift(a)),a.value}return i}return{get:r,put:function(n,a){r(n)===i&&(t.unshift({key:n,value:a}),t.length>e&&t.pop())},getEntries:function(){return t},clear:function(){t=[]}}}(o,l);function p(){var n=f.get(arguments);if(n===i){if(n=e.apply(null,arguments),s){var t=f.getEntries(),r=t.find((function(e){return s(e.value,n)}));r&&(n=r.value)}f.put(arguments,n)}return n}return p.clearCache=function(){return f.clear()},p}function l(e){var n=Array.isArray(e[0])?e[0]:e;if(!n.every((function(e){return"function"===typeof e}))){var t=n.map((function(e){return"function"===typeof e?"function "+(e.name||"unnamed")+"()":typeof e})).join(", ");throw new Error("createSelector expects all input-selectors to be functions, but received the following types: ["+t+"]")}return n}function f(e){for(var n=arguments.length,t=new Array(n>1?n-1:0),r=1;r<n;r++)t[r-1]=arguments[r];var a=function(){for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];var u,o=0,i={memoizeOptions:void 0},c=r.pop();if("object"===typeof c&&(i=c,c=r.pop()),"function"!==typeof c)throw new Error("createSelector expects an output function after the inputs, but received: ["+typeof c+"]");var s=i,f=s.memoizeOptions,p=void 0===f?t:f,d=Array.isArray(p)?p:[p],m=l(r),v=e.apply(void 0,[function(){return o++,c.apply(null,arguments)}].concat(d)),h=e((function(){for(var e=[],n=m.length,t=0;t<n;t++)e.push(m[t].apply(null,arguments));return u=v.apply(null,e)}));return Object.assign(h,{resultFunc:c,memoizedResultFunc:v,dependencies:m,lastResult:function(){return u},recomputations:function(){return o},resetRecomputations:function(){return o=0}}),h};return a}var p=f(s),d=function(e){return e.contacts.contacts},m=function(e){return e.contacts.isLoading},v=function(e){return e.contacts.error},h=function(e){return e.filter},y=p([d,h],(function(e,n){return e?e.filter((function(e){return e.name.toLowerCase().includes(n.toLowerCase())})):e})),b=t(208),x=t(184);function g(){var e=(0,u.useState)(""),n=(0,r.Z)(e,2),t=n[0],i=n[1],c=(0,u.useState)(""),s=(0,r.Z)(c,2),l=s[0],f=s[1],p=function(e){var n=e.target,t=n.name,r=n.value;switch(t){case"name":f(r);break;case"number":i(r);break;default:return}},m=(0,o.I0)(),v=(0,o.v9)(d);return(0,x.jsx)("div",{children:(0,x.jsxs)("form",{onSubmit:function(e){e.preventDefault();var n={id:a(),name:l,number:t};v.some((function(e){return e.name.toLowerCase()===l.toLowerCase()})),m((0,b.uK)(n)),f(""),i("")},className:"Container__form",children:[(0,x.jsxs)("label",{className:"text",children:["Name",(0,x.jsx)("input",{type:"text",name:"name",value:l,onChange:p,pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' \\-][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0})]}),(0,x.jsxs)("label",{className:"text",children:["Number",(0,x.jsx)("input",{type:"tel",value:t,onChange:p,name:"number",pattern:"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0})]}),(0,x.jsx)("button",{type:"submit",className:"Add__contact",children:"Add contact"})]})})}t(23);var j=function(){var e=(0,o.I0)(),n=(0,o.v9)(y);return(0,x.jsx)(x.Fragment,{children:n.length?(0,x.jsx)("ul",{children:n.map((function(n){var t=n.name,r=n.number,a=n.id;return(0,x.jsxs)("li",{className:"Contact__item",children:[t," : ",(0,x.jsx)("span",{className:"Number",children:r}),(0,x.jsx)("button",{className:"Delete",onClick:function(){return function(n){return e((0,b.GK)(n))}(a)},children:"Delete"})]},a)}))}):(0,x.jsx)("p",{className:"Number",children:" No contacts "})})},C=t(429),N=function(){var e=(0,o.I0)(),n=(0,o.v9)(h);return(0,x.jsx)("div",{children:(0,x.jsxs)("label",{className:"Filter_text",children:["Find contacts by Name",(0,x.jsx)("input",{type:"text",value:n,onChange:function(n){e((0,C.b)(n.currentTarget.value.trim()))}})]})})},k=function(){var e=(0,o.I0)(),n=(0,o.v9)(m),t=(0,o.v9)(v);return(0,u.useEffect)((function(){e((0,b.yF)())}),[e]),(0,x.jsxs)("div",{children:[(0,x.jsx)("h1",{className:"Phonebook__title",children:"Phonebook"}),(0,x.jsx)(g,{}),(0,x.jsx)("h2",{className:"Phonebook__title",children:"Contacts"}),(0,x.jsx)(N,{}),(0,x.jsx)(j,{}),n&&!t]})}}}]);
//# sourceMappingURL=751.d942fd1b.chunk.js.map